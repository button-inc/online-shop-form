name: Run Tests and Lints

on: push

jobs:
  tests:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install asdf
        uses: asdf-vm/actions/setup@v1
      - name: Cache tools
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.asdf
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}
      - name: Install required tools
        run: |
          cat .tool-versions | cut -f 1 -d ' ' | xargs -n 1 asdf plugin-add || true
          asdf plugin-add postgres || true
          asdf install
          asdf reshim
      - name: Setup postgres
        run: |
          pg_ctl start
          createdb runner || true
          chmod +x ./setup.sh
          ./setup.sh
        working-directory: ./db
      - name: Run unit tests
        run: |
          yarn
          yarn jest
        working-directory: ./app
      # - name: Run cypress tests
      #   run: |
      #     yarn dev & yarn wait-on http://localhost:3000
      #     yarn cypress run
      #   working-directory: ./app
  pre-commit:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Yarn Dependencies
        run: |
          yarn
        working-directory: ./app
      - name: Rerun Pre-Commit Hooks on CI
        run: |
          pip install -r requirements.txt
          chmod +x .bin/eslint-prettier.sh
          pre-commit run --all-files
  commitlint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2
